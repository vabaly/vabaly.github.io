{"version":3,"sources":["highlighter.ts","Shape.tsx","PopMenu.tsx","Color.tsx","Panel.tsx","reportWebVitals.ts","index.tsx"],"names":["highlighter","Highlighter","run","ShapeStyle","Shape","props","shapeStyle","onSelect","baseClassName","className","classnames","Wavy","onClick","Underline","Background","PopMenu","isShow","left","top","onDelete","style","Color","color","onChangeComplete","useState","isShowPicker","setIsShowPicker","handleColorCircleClick","useCallback","handleMaskClick","event","stopPropagation","backgroundColor","defaultShapeStyle","colorsMapToClass","Panel","highlightContentSelected","setHighlightContentSelected","isShowPopMenu","setIsShowPopMenu","setShapeStyle","setColor","handleColorSelect","colorResult","hex","handleShapeStyleSelect","hidePopMenu","handleDeleteSelected","id","remove","useEffect","on","CLICK","args","clientX","clientY","dispose","classNames","indexOf","setOption","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48592e9c.chunk.js","sourcesContent":["/**\n * @file highlighter 实例\n */\nimport Highlighter from 'web-highlighter'\n\nconst highlighter = new Highlighter()\n\nhighlighter.run()\n\nexport default highlighter\n","import classnames from 'classnames'\nimport './Shape.css'\n\nexport enum ShapeStyle {\n  Wavy = 'wavy',\n  Underline = 'underline',\n  Background = 'text-background',\n}\n\ninterface ShapeProps {\n  shapeStyle: ShapeStyle\n  onSelect: (shapeStyle: ShapeStyle) => void\n}\n\nfunction Shape (props: ShapeProps) {\n  const { shapeStyle, onSelect } = props\n  const baseClassName = 'font shape-option'\n\n  return (\n    <>\n      <div className=\"font text\">样式</div>\n      <div\n        className={classnames(baseClassName, 'wavy', {\n          'shape-selected': shapeStyle === ShapeStyle.Wavy\n        })}\n        onClick={() => onSelect(ShapeStyle.Wavy)}\n      >U</div>\n      <div\n        className={classnames(baseClassName, 'underline', {\n          'shape-selected': shapeStyle === ShapeStyle.Underline\n        })}\n        onClick={() => onSelect(ShapeStyle.Underline)}\n      >U</div>\n      <div\n        className={classnames(baseClassName)}\n        onClick={() => onSelect(ShapeStyle.Background)}\n      >\n        <span className={classnames({\n          'text-background': shapeStyle !== ShapeStyle.Background,\n          'text-background--selected': shapeStyle === ShapeStyle.Background,\n        })}>&nbsp;U&nbsp;</span>\n      </div>\n    </>\n  )\n}\n\nexport default Shape\n","/**\n * @file 弹出的操作面板\n */\nimport './PopMenu.css'\n\ninterface PopMenuProps {\n  isShow: boolean\n  left?: number\n  top?: number\n  onDelete: () => void\n}\n\nfunction PopMenu (props: PopMenuProps) {\n  const { isShow, left, top, onDelete } = props\n\n  return isShow\n    ? (\n      <div\n        className=\"pop-menu\"\n        style={{\n          left,\n          top\n        }}\n      >\n        <div\n          className=\"font text pop-menu--item\"\n          onClick={onDelete}\n        >删除</div>\n      </div>\n    )\n    : null\n}\n\nexport default PopMenu\n","import { useCallback, useState } from \"react\"\nimport { CirclePicker, ColorChangeHandler } from 'react-color'\nimport './Color.css'\n\ninterface ColorProps {\n  color: string\n  onChangeComplete: ColorChangeHandler\n}\n\nfunction Color (props: ColorProps) {\n  const { color, onChangeComplete } = props\n  const [isShowPicker, setIsShowPicker] = useState(false)\n  const handleColorCircleClick = useCallback(() => {\n    setIsShowPicker(true)\n  }, [])\n  const handleMaskClick = useCallback((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    event.stopPropagation()\n    setIsShowPicker(false)\n  }, [])\n\n  return (\n    <>\n      <div className=\"font text\">颜色</div>\n      <div\n        className=\"color\"\n        style={{ backgroundColor: color }}\n        onClick={handleColorCircleClick}\n      >\n        {\n          isShowPicker\n            ? (\n              <>\n                <div\n                  className=\"mask\"\n                  onClick={handleMaskClick}\n                />\n                <CirclePicker\n                  className=\"color-picker\"\n                  color={color}\n                  onChangeComplete={onChangeComplete}\n                />\n              </>\n            )\n            : null\n        }\n      </div>\n    </>\n  )\n}\n\nexport default Color\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { ColorResult } from 'react-color'\nimport highlighter from './highlighter'\nimport Shape, { ShapeStyle } from './Shape';\nimport PopMenu from './PopMenu'\nimport Color from './Color';\nimport './Panel.css';\n\nimport Highlighter from 'web-highlighter';\n\nconst defaultColor = '#f44336'\nconst defaultShapeStyle = ShapeStyle.Wavy\n\n// 一份颜色对应的类名的列表\nconst colorsMapToClass = {\n  // color 类名遵循 color-行-列 的格式\n  '#f44336': 'color-1-1',\n  '#e91e63': 'color-1-2',\n  '#9c27b0': 'color-1-3',\n  '#673ab7': 'color-1-4',\n  '#3f51b5': 'color-1-5',\n  '#2196f3': 'color-1-6',\n  '#03a9f4': 'color-2-1',\n  '#00bcd4': 'color-2-2',\n  '#009688': 'color-2-3',\n  '#4caf50': 'color-2-4',\n  '#8bc34a': 'color-2-5',\n  '#cddc39': 'color-2-6',\n  '#ffeb3b': 'color-3-1',\n  '#ffc107': 'color-3-2',\n  '#ff9800': 'color-3-3',\n  '#ff5722': 'color-3-4',\n  '#795548': 'color-3-5',\n  '#607d8b': 'color-3-6',\n}\ntype ColorValue = keyof typeof colorsMapToClass\n\ninterface HighlightContentSelected {\n  id: string\n  clientX: number\n  clientY: number\n}\n\nfunction Panel () {\n  const [highlightContentSelected, setHighlightContentSelected] = useState<HighlightContentSelected | null>(null)\n  const [isShowPopMenu, setIsShowPopMenu] = useState(false)\n  const [shapeStyle, setShapeStyle] = useState(defaultShapeStyle)\n  const [color, setColor] = useState<ColorValue>(defaultColor)\n  const handleColorSelect = useCallback((colorResult: ColorResult) => {\n    const { hex } = colorResult\n    setColor(hex as ColorValue)\n  }, [])\n  const handleShapeStyleSelect = useCallback((shapeStyle: ShapeStyle) => {\n    setShapeStyle(shapeStyle)\n  }, [])\n  const hidePopMenu = useCallback(() => setIsShowPopMenu(false), [])\n  const handleDeleteSelected = useCallback(() => {\n    if (highlightContentSelected && highlightContentSelected.id) {\n      highlighter.remove(highlightContentSelected.id)\n    }\n    hidePopMenu()\n  }, [\n    highlightContentSelected,\n    hidePopMenu,\n  ])\n\n  // 监听高亮区域的点击事件\n  useEffect(() => {\n    highlighter.on(Highlighter.event.CLICK, (...args: any[]) => {\n      const id: string = args?.[0]?.id\n      const event: MouseEvent = args?.[2]\n      setHighlightContentSelected({\n        id: id,\n        clientX: event.clientX,\n        clientY: event.clientY,\n      })\n      setIsShowPopMenu(true)\n    })\n    return () => {\n      highlighter.dispose()\n    }\n  }, [])\n\n  // 根据笔刷颜色发生变化\n  useEffect(() => {\n    let classNames: string[] = []\n    // 这两种仅是字体的变化\n    if ([ShapeStyle.Wavy, ShapeStyle.Underline].indexOf(shapeStyle) > -1) {\n      classNames = [colorsMapToClass[color], shapeStyle]\n    } else {\n      classNames = [`text-background-${colorsMapToClass[color]}`]\n    }\n    highlighter.setOption({\n      style: {\n        className: ['pointer', ...classNames]\n      }\n    })\n  }, [color, shapeStyle])\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-content\">\n        <Shape\n          shapeStyle={shapeStyle}\n          onSelect={handleShapeStyleSelect}\n        />\n        <div className=\"line\" />\n        <Color\n          color={color}\n          onChangeComplete={handleColorSelect}\n        />\n      </div>\n\n      {\n\n        isShowPopMenu\n          ? (\n            <div\n              className=\"mask\"\n              onClick={hidePopMenu}\n            />\n          )\n          : null\n      }\n      <PopMenu\n        left={highlightContentSelected?.clientX}\n        top={highlightContentSelected?.clientY}\n        isShow={isShowPopMenu}\n        onDelete={handleDeleteSelected}\n      />\n    </div>\n  );\n}\n\nexport default Panel\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Panel from './Panel';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Panel />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}